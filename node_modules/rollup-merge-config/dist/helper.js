"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _isPlainObject2 = _interopRequireDefault(require("lodash/isPlainObject"));

var _mergeWith2 = _interopRequireDefault(require("lodash/mergeWith"));

var _cloneDeep2 = _interopRequireDefault(require("lodash/cloneDeep"));

var _unionWith2 = _interopRequireDefault(require("lodash/unionWith"));

var _isEqual2 = _interopRequireDefault(require("lodash/isEqual"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const isArray = Array.isArray;

const mergeCustomizer = ({
  arrayCustomizer,
  objectCustomizer,
  key
} = {}) => (obj1, obj2, k) => {
  const modKey = key ? `${key}.${k}` : k;

  if (isArray(obj1) && isArray(obj2)) {
    const result = arrayCustomizer && arrayCustomizer(obj1, obj2, modKey);
    return result || (0, _mergeWith2.default)([], (0, _unionWith2.default)(obj1, obj2, _isEqual2.default), mergeCustomizer({
      arrayCustomizer,
      objectCustomizer,
      key: modKey
    }));
  }

  if ((0, _isPlainObject2.default)(obj1) && (0, _isPlainObject2.default)(obj2)) {
    const result = objectCustomizer && objectCustomizer(obj1, obj2, modKey);
    return result || (0, _mergeWith2.default)({}, obj1, obj2, mergeCustomizer({
      arrayCustomizer,
      objectCustomizer,
      key: modKey
    }));
  }

  if ((0, _isPlainObject2.default)(obj2)) {
    return (0, _cloneDeep2.default)(obj2);
  }

  if (isArray(obj2)) {
    return [...obj2];
  }

  return obj2;
};

var _default = mergeCustomizer;
exports.default = _default;